<!DOCTYPE HTML>
<!--------------------------------------------------------------------------->  
<!--                           INTRODUCTION                                

 The CodeProject article submission template (HTML version)

Using this template will help us post your article sooner. To use, just 
follow the 3 easy steps below:
 
     1. Fill in the article description details
     2. Add links to your images and downloads
     3. Include the main article text

That's all there is to it! All formatting will be done by our submission
scripts and style sheets. 

-->  
<!--------------------------------------------------------------------------->  
<!--                        IGNORE THIS SECTION                            -->
<html>
<head>
<title>CodeProject</title>
<Style>
BODY, P, TD { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt }
H2,H3,H4,H5 { color: #ff9900; font-weight: bold; }
H2 { font-size: 13pt; }
H3 { font-size: 12pt; }
H4 { font-size: 10pt; color: black; }
PRE { BACKGROUND-COLOR: #FBEDBB; FONT-FAMILY: "Courier New", Courier, mono; WHITE-SPACE: pre; }
CODE { COLOR: #990000; FONT-FAMILY: "Courier New", Courier, mono; }
</style>

<link type="text/css" rel="stylesheet" 
      href="https://codeproject.global.ssl.fastly.net/App_Themes/CodeProject/Css/Main.min.css">
</head>
<body bgcolor="#FFFFFF" color=#000000>
    <!--------------------------------------------------------------------------->
    <!-------------------------------     STEP 1      --------------------------->
    <!--  Fill in the details (CodeProject will reformat this section for you) -->

<pre>
Title:       Enter Article Title Here
Author:      Enter your Code Project User Name (or suggest one if you're not a member)
Email:       Enter your Code Project E-mail Login (or the email you wish to use if not a member)
Language:    Enter the Languages that Apply to Your Article (C# 3.0, etc.)
Platform:    Enter the Platforms that Apply to Your Article (Windows, etc.)
Technology:  Enter the Technologies that Apply to Your Article (WPF, etc.)
Level:       Pick ONE: Beginner/Intermediate/Advanced
Description: Enter a brief description of your article
Section      Enter the Code Project Section you Wish the Article to Appear
SubSection   Enter the Code Project SubSection you Wish the Article to Appear
License:     Enter the license (<a href="http://www.codeproject.com/info/licenses.aspx">CPOL, CPL, MIT, etc</a>)
</pre>

<style>
table.mnist  {
  border: 1px solid blue;
  border-collapse: collapse;
}
table.mnist th
{
  border: 2px solid blue;
  border-collapse: collapse;

}
table.mnist tr
{
  border: 1px solid blue;
  border-collapse: collapse;
}
table.mnist td
{
  border: 1px solid blue;
  border-collapse: collapse;
  padding-left:5px;
  padding-right:5px
}
table.mnist td.header
{
  font-weight:bold;
}
table.mnist thead td
{
    font-weight:bold;
}
</style>

    <!-------------------------------     STEP 2      --------------------------->
    <!--  Include download and sample image information.                       -->

    <ul class=download>
        <li><a href="Article_demo.zip">Download demo project - XXX Kb </a></li>
        <li><a href="Article_src.zip">Download source - XXX Kb</a></li>
    </ul>

    <p>
        <img src="Article.gif" alt="Sample Image - maximum width is 600 pixels"
             style="width:400px; height:200px">
    </p>

    <!-------------------------------     STEP 3      --------------------------->
    <!--  Add the article text. Please use simple formatting (<h2>, <p> etc)   -->

    <h2 id="toc">Table of Contents</h2>
    <ul>
        <li>
            <a href="#intro">Introduction</a>
        </li>
        <li>
            <a href="#tensorflow">About Tensorflow</a>
        </li>
        <li>
            <a href="#back">Background</a>
        </li>
        <li>
            <a href="#mnist">What is MNIST? Why MNIST</a>
        </li>
        <li>
            <a href="#deeplearning">Deep learning</a>
        </li>
        <li>
            <a href="#tensorflowsharp">About TensorflowSharp</a>
        </li>
        <li>
            <a href="#tensorflowgpu">Using Tensorflow with GPU</a>
        </li>
        <li>
            <a href="#csharpconsole">Using Tensorflow in a C# console application</a>
            <ul>
                <li><a href="#csharpconsole_overview">Overview</a></li>
                <li><a href="#csharpconsole_create">Create a console application</a></li>
                <li><a href="#csharpconsole_loadmodel">Load the trained model file</a></li>
                <li><a href="#csharpconsole_evaluateimage">Load the test image and evaluate using TensorflowSharp</a></li>
                <li><a href="#csharpconsole_evaluateimage">Results</a></li>
                
            </ul>
        </li>
        <li>
            <a href="#usingthecode">Using the code</a>
        </li>
        <li>
            <a href="#pointsofinterest">Points of interest</a>
        </li>
    </ul>

    <h2><a id="intro"></a>Introduction</h2>
    <p>In the field of pattern recognition, deep neural networks have gained prominence in the last 5 years. This can be largely attributed to availability of 
        cheaper hardware, programming libraries and labelled data. Deep neural networks or Convolutional neural networks (CNN) if trained properly 
        can give spectacular results. TensorFlow from Google is one the very popular libraries that implement some of these complicated algorithms</p>
    <p>
    In this article I am going to demonstrate how to train a CNN model to recognize handwritten digits from the MNIST database. This will be followed by a 
    C# console application which will consume the trained model to actually classiy the test images from the MNIST dataset. The objective of this article
        is to demonstrate how to make the best use of Python for training a model and .NET to build a hypothetical end user application which consumes the trained model.
    </p>
    <a href="#toc" title="Back to Table of Contents">Top</a>
    <h2><a id="tensorflow"></a> About TensorFlow</h2>
    <h3>Tensorflow native library</h3>    
    <pre>
        ///
        ///https://www.tensorflow.org/install/lang_c
        ///The windows native implementation is downloadable as a single ZIP and structured as follows
        ///

        include
        --------
                |
                |
                |
                --c_api.h
                |
                |
        lib
        --------
                |
                |
                --tensorflow.dll
                |
                |
                --tensorflow.lib


    </pre>

    <h3>Tensorflow bindings for Python and C#</h3>
    <p>Tensorflow is implemented as C/C++ dynamic link library. Platform specific binaries are available in a ZIP file. Bindings in various languages are provided on top of this library. These are language specific wrappers which invoke the native libraries.
    Python is perhaps one of the most versatile programming layers built on top of the native TensorFlow implementations. TensorFlowSharp is the .NET wrapper over TensorFlow.
    </p>
    <pre>
                        TensorFlow(C/C++)
                        ----------------
                            |
                            |
        ------------------------------------------------
        |                                               |
        |                                               |
        |                                               |
      Python                                        TensorFlowSharp(C#)
      ------                                        -------------------
  (train model)                             (use model in client application)
    </pre>
    <a href="#toc" title="Back to Table of Contents">Top</a>
    <h2 id="back">Background</h2>
    <ul>
        <li><strong>Python</strong> - I have used Python for training a CNN model using the MNIST dataset of handwritten digits. A basic knowlege of Python would be essential.
            I have used <strong>Visual Studio Code (1.36.1)</strong> for the Python scripts. You can use any Python editor that suits you.
        </li>
        <li>
            I have used <strong>Visual Studio 2017</strong> for the simple Console application which consumes the trained model and classifies the test images
        </li>
        <li>
            In this article I have used the <strong>GPU</strong> version of the Tensorflow for to improve the speed of learning. You would need  a <strong>GPU</strong> enabled desktop.
        The reader is cautioned that coding with the GPU requires additional <strong>CUDA</strong> libraries and drivers to be installed. This article also assumes that the reader
        is familiar with the basic principles of <strong>Deep Convolution Neural Networks</strong>.
        </li>
    </ul>
    <a href="#toc" title="Back to Table of Contents">Top</a>
    

    <h2><a id="mnist"></a> What is MNIST? Why MNIST?</h2>
    <h3>Overview</h3>
    <p>MNIST database is a collection of handwritten digits (0-9). This comprises of 60,000 training and 10,000 testing images. Each of the images 
        is 28 pixels wide and 28 pixels high and all the images are in gray scale. 
        In the world of machine learning and computer vision, MNIST has become the de facto
        standard to test any new paradigm. (Reference <a href="http://yann.lecun.com/exdb/mnist/">http://yann.lecun.com/exdb/mnist/</a>)
        <img src="images/3_expanded.PNG" style="width:50%;height:50%;"/>
    </p>
    <h3>Example pictures</h3>
    <p>
        <img src="images/0.png"/>
        <img src="images/1.png"/>
        <img src="images/2.png"/>
        <img src="images/3.png"/>
        <img src="images/4.png"/>
        <img src="images/5.png"/>
        <img src="images/6.png"/>
        <img src="images/7.png"/>
        <img src="images/8.png"/>
        <img src="images/9.png"/>
    </p>
    <h3>Distribution of pictures</h3>
    <table class="mnist">
        <thead>
            <tr>
                <td></td>
                <td>0</td>
                <td>1</td>
                <td>2</td>
                <td>3</td>
                <td>4</td>
                <td>5</td>
                <td>6</td>
                <td>7</td>
                <td>8</td>
                <td>9</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="header">Training</td>
                <td>5923</td>
                <td>6742</td>
                <td>5985</td>
                <td>6131</td>
                <td>5842</td>
                <td>5421</td>
                <td>5918</td>
                <td>6265</td>
                <td>5851</td>
                <td>5949</td>
            </tr>
            <tr>
                <td class="header">Testing</td>
                <td>980</td>
                <td>1135</td>
                <td>1032</td>
                <td>1010</td>
                <td>982</td>
                <td>892</td>
                <td>958</td>
                <td>1028</td>
                <td>974</td>
                <td>1009</td>

            </tr>
        </tbody>
    </table>
    <a href="#toc" title="Back to Table of Contents">Top</a>
    <h2><a id="deeplearning"></a> Deep learning</h2>
    <p>
        TODO Show your pic from StackOverflow
    </p>
    <p>
        TODO Show CNN network
    </p>
    <a href="#toc" title="Back to Table of Contents">Top</a>
    

    


    <h2><a id="tensorflowsharp"></a>TensorflowSharp - Using Tensorflow from a C# application</h2>
    <p>TODO Talk about Tensorflow</p>


    <h2 id="tensorflowgpu">Using Tensorflow with GPU</h2>
    <h3>Overview</h3>
    <pre>
                                Python script
                                --------------
                                        |
                                        |
                                        |

                              TensorFlow GPU package
                              ----------------------
                                        |
                                        |
                                        |
                                      cuDNN
                                      -----
                                        |
                                        |
                                        |
                                  CUDA Toolkit
                                  --------------
                                        |
                                        |
                                        |
                                     Drivers
                                     -------
                                        |
                                        |
                                        |
                                       GPU
                                       ---
                                
    </pre>
    <h3>What worked for me?</h3>
    <p>
        When using TensorFlow for training, you have the choice of using CPU and GPU. You will need the correct version of NVIDIA drivers
        and libraries. As a rule of thumb,the version of NVIDIA drivers should match the current version of TensorFlow. At the time of writing this article, I have used the python package TensorFlow-GPU 1.14.0.
        I would caution the reader that my experience with installing the drivers and getting TensorFlow GPU to work was less than smooth.
    </p>
    <ul>
        <li>
            Update the version of the NVIDIA drivers. I did not install the through NVIDIA web site. I updated the display adapter through the Windows Device Manager user interface.
            The version 24.21.14.1131  worked for me.
        </li>
        <li>
            Install CUDA Toolkit 10.0 version
        <li>
            Install cuDNN SDK version 7.6.2 . I chose the Windows 10 edition. I copied over cudnn64_7.dll to %ProgramFiles%\NVIDIA GPU Computing Toolkit\CUDA\v10.0\bin
        </li>
        <li>
            Python package Tensorflow 1.14
        </li>
        <li>
            Python package Keras 2.2.4
        </li>
        <li>
            Python package Numpy 1.16.1
        </li>
    </ul>
    <a href="#toc" title="Back to Table of Contents">Top</a>

    <h2><a id="trainingusingpython"></a> Training a CNN model using TensorFlow and Python</h2>
    <p>
        TODO Show python script
    </p>
    <a href="#toc" title="Back to Table of Contents">Top</a>

    <h2 id="csharpconsole">C# console application</h2>
    <h3 id="csharpconsole_overview">Overview</h3>
    <pre>
        -----------------------
        1)Load trained model file
        -----------------------
                |
                |
        -----------------
        2)Load test images
        -----------------
                |
                |
        -----------------------------------
        3)Evaluate the test image using CNN
        -----------------------------------

    </pre>
    <h3 id="csharpconsole_create">Create a Console application</h3>
    <ul>
        <li>
            Create a new Console application using .NET Framework
        </li>
        <li>
            Add NUGET package reference to TensorflowSharp
        </li>
    </ul>
    <h3 id="csharpconsole_loadmodel">Load the trained model file</h3>
    <pre>
        TODO Show code snippet
    </pre>

    <h3 id="csharpconsole_evaluateimage">Load the test image and evaluate using TensorFlowSharp</h3>
    <pre>
        TODO Show code snippet
    </pre>
    <a href="#toc" title="Back to Table of Contents">Top</a>
    
    <h3 id="csharpconsole_results">Results</h3>
    <p>Display test vs epoch
        Display some pictures which failed
        Possibly confusion matrix
    </p>
    <a href="#toc" title="Back to Table of Contents">Top</a>

    <h2 id="usingthecode">Using the code</h2>

    <p>
        A brief description of how to use the article or code. The class names, the
        methods and properties, any tricks or tips.
    </p>
    <a href="#toc" title="Back to Table of Contents">Top</a>
   

    <h2 id="pointsofinterest">Points of Interest</h2>

    <p>
        TODO Link to Andrew NG Youtube video

        Did you learn anything interesting/fun/annoying while writing the code? Did you do

        anything particularly clever or wild or zany?
    </p>
    <a href="#toc" title="Back to Table of Contents">Top</a>

    <h2>History</h2>

    <p>Keep a running update of any changes or improvements you've made here. </p>

    <!-------------------------------    That's it!   --------------------------->
</body>

</html>

